name: Update Congo News

on:
  schedule:
    - cron: '0 4 * * *'  # Run at 4 AM UTC daily (early morning in Congo)
  workflow_dispatch:     # Allow manual triggering

jobs:
  update-news:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm init -y
          npm install axios cheerio rss-parser

      - name: Create news updater script
        run: |
          cat > update-news.js << 'EOF'
          const axios = require('axios');
          const cheerio = require('cheerio');
          const fs = require('fs');
          const path = require('path');
          const Parser = require('rss-parser');
          
          const parser = new Parser();
          const today = new Date();
          const dateString = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;
          const formattedDate = today.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });
          
          // Function to create article IDs
          const createArticleId = (source, index) => {
            const sourceSlug = source.toLowerCase().replace(/\s+/g, '-').replace(/\./g, '');
            return `${sourceSlug}-${index}`;
          };
          
          // Function to determine category from title and URL
          const determineCategory = (title, url) => {
            title = title.toLowerCase();
            url = url.toLowerCase();
            
            // Check URL first
            if (url.includes('politique') || url.includes('election')) {
              return 'politique';
            } else if (url.includes('securite') || url.includes('conflit') || url.includes('armee')) {
              return 'securite';
            } else if (url.includes('economie') || url.includes('finance') || url.includes('mines')) {
              return 'economie';
            } else if (url.includes('societe') || url.includes('sante') || url.includes('education')) {
              return 'societe';
            } else if (url.includes('environnement') || url.includes('climat')) {
              return 'environnement';
            }
            
            // Then check title
            if (title.includes('president') || title.includes('ministre') || title.includes('gouvernement') || title.includes('election') || title.includes('parlement')) {
              return 'politique';
            } else if (title.includes('armee') || title.includes('conflit') || title.includes('securite') || title.includes('attaque') || title.includes('violence')) {
              return 'securite';
            } else if (title.includes('economie') || title.includes('finance') || title.includes('mine') || title.includes('cobalt') || title.includes('cuivre')) {
              return 'economie';
            } else if (title.includes('hopital') || title.includes('ecole') || title.includes('education') || title.includes('sante')) {
              return 'societe';
            } else if (title.includes('environnement') || title.includes('climat') || title.includes('parc') || title.includes('foret')) {
              return 'environnement';
            }
            
            // Default category
            return 'politique';
          };
          
          // Function to fetch news from Radio Okapi (RSS feed)
          async function fetchRadioOkapi() {
            try {
              console.log('Fetching Radio Okapi news...');
              const feed = await parser.parseURL('https://www.radiookapi.net/rss.xml');
              
              const articles = [];
              let index = 1;
              
              for (const item of feed.items.slice(0, 10)) { // Get top 10 items
                const category = determineCategory(item.title, item.link);
                
                // Only include specific categories
                if (['politique', 'securite', 'societe'].includes(category)) {
                  const article = {
                    id: createArticleId('Radio-Okapi', index++),
                    title: item.title,
                    source: 'Radio Okapi',
                    date: formattedDate,
                    category: category,
                    content: `<p>${item.contentSnippet.split('\n').join('</p><p>')}</p>`,
                  };
                  
                  articles.push(article);
                }
              }
              
              console.log(`Found ${articles.length} articles from Radio Okapi`);
              return articles;
            } catch (error) {
              console.error('Error fetching Radio Okapi news:', error);
              return [];
            }
          }
          
          // Function to fetch news from Actualite.cd
          async function fetchActualiteCD() {
            try {
              console.log('Fetching Actualite.cd news...');
              const politiqueResponse = await axios.get('https://actualite.cd/category/actualite/politique');
              const securiteResponse = await axios.get('https://actualite.cd/category/actualite/securite');
              
              const articles = [];
              let index = 1;
              
              // Process politique articles
              const politiqueHTML = politiqueResponse.data;
              const $politique = cheerio.load(politiqueHTML);
              
              $politique('article.article').slice(0, 5).each((i, el) => {
                const title = $politique(el).find('.article__title').text().trim();
                const snippet = $politique(el).find('.article__summary').text().trim();
                
                const article = {
                  id: createArticleId('Actualite-cd', index++),
                  title: title,
                  source: 'Actualite.cd',
                  date: formattedDate,
                  category: 'politique',
                  content: `<p>${snippet}</p>`,
                };
                
                articles.push(article);
              });
              
              // Process securite articles
              const securiteHTML = securiteResponse.data;
              const $securite = cheerio.load(securiteHTML);
              
              $securite('article.article').slice(0, 5).each((i, el) => {
                const title = $securite(el).find('.article__title').text().trim();
                const snippet = $securite(el).find('.article__summary').text().trim();
                
                const article = {
                  id: createArticleId('Actualite-cd', index++),
                  title: title,
                  source: 'Actualite.cd',
                  date: formattedDate,
                  category: 'securite',
                  content: `<p>${snippet}</p>`,
                };
                
                articles.push(article);
              });
              
              console.log(`Found ${articles.length} articles from Actualite.cd`);
              return articles;
            } catch (error) {
              console.error('Error fetching Actualite.cd news:', error);
              return [];
            }
          }
          
          // Function to fetch news from RFI (RSS feed)
          async function fetchRFI() {
            try {
              console.log('Fetching RFI news...');
              const rdcFeed = await parser.parseURL('https://www.rfi.fr/fr/tag/rdc/feed/');
              const rwandaFeed = await parser.parseURL('https://www.rfi.fr/fr/tag/rwanda/feed/');
              const burundiFeed = await parser.parseURL('https://www.rfi.fr/fr/tag/burundi/feed/');
              
              const articles = [];
              let index = 1;
              
              // Process RDC articles
              for (const item of rdcFeed.items.slice(0, 4)) {
                const category = determineCategory(item.title, item.link);
                
                const article = {
                  id: createArticleId('RFI', index++),
                  title: item.title,
                  source: 'Radio France Internationale',
                  date: formattedDate,
                  category: category,
                  content: `<p>${item.contentSnippet.split('\n').join('</p><p>')}</p>`,
                };
                
                articles.push(article);
              }
              
              // Process Rwanda articles
              for (const item of rwandaFeed.items.slice(0, 2)) {
                const category = determineCategory(item.title, item.link);
                
                const article = {
                  id: createArticleId('RFI', index++),
                  title: item.title,
                  source: 'Radio France Internationale',
                  date: formattedDate,
                  category: category,
                  content: `<p>${item.contentSnippet.split('\n').join('</p><p>')}</p>`,
                };
                
                articles.push(article);
              }
              
              // Process Burundi articles
              for (const item of burundiFeed.items.slice(0, 2)) {
                const category = determineCategory(item.title, item.link);
                
                const article = {
                  id: createArticleId('RFI', index++),
                  title: item.title,
                  source: 'Radio France Internationale',
                  date: formattedDate,
                  category: category,
                  content: `<p>${item.contentSnippet.split('\n').join('</p><p>')}</p>`,
                };
                
                articles.push(article);
              }
              
              console.log(`Found ${articles.length} articles from RFI`);
              return articles;
            } catch (error) {
              console.error('Error fetching RFI news:', error);
              return [];
            }
          }
          
          // Function to fetch news from Mines.cd
          async function fetchMinesCD() {
            try {
              console.log('Fetching Mines.cd news...');
              const response = await axios.get('https://mines.cd/');
              
              const articles = [];
              let index = 1;
              
              // Process articles
              const html = response.data;
              const $ = cheerio.load(html);
              
              $('.jeg_post').slice(0, 6).each((i, el) => {
                const title = $(el).find('.jeg_post_title').text().trim();
                const snippet = $(el).find('.jeg_post_excerpt').text().trim();
                
                const article = {
                  id: createArticleId('Minescd', index++),
                  title: title,
                  source: 'Mines.cd',
                  date: formattedDate,
                  category: 'economie',
                  content: `<p>${snippet}</p>`,
                };
                
                articles.push(article);
              });
              
              console.log(`Found ${articles.length} articles from Mines.cd`);
              return articles;
            } catch (error) {
              console.error('Error fetching Mines.cd news:', error);
              return [];
            }
          }
          
          // Main function to gather all news and update the news-data.js file
          async function updateNews() {
            try {
              console.log('Starting news update process...');
              
              // Fetch news from all sources
              const radioOkapiArticles = await fetchRadioOkapi();
              const actualiteCDArticles = await fetchActualiteCD();
              const rfiArticles = await fetchRFI();
              const minesCDArticles = await fetchMinesCD();
              
              // Combine all articles
              const todayArticles = [
                ...radioOkapiArticles,
                ...actualiteCDArticles,
                ...rfiArticles,
                ...minesCDArticles
              ];
              
              console.log(`Total of ${todayArticles.length} articles gathered for today`);
              
              // Read the existing news-data.js file
              const newsDataPath = path.join(process.cwd(), 'news-data.js');
              let newsData = await fs.promises.readFile(newsDataPath, 'utf8');
              
              // Parse the existing data to get yesterday's news
              const extractNewsData = (content) => {
                try {
                  const startPhrase = "const newsByDate = {";
                  const startIndex = content.indexOf(startPhrase);
                  
                  if (startIndex === -1) {
                    throw new Error("Could not find start of news data object");
                  }
                  
                  const contentSubstring = content.substring(startIndex);
                  let braceCount = 0;
                  let endIndex = 0;
                  
                  for (let i = 0; i < contentSubstring.length; i++) {
                    if (contentSubstring[i] === '{') braceCount++;
                    if (contentSubstring[i] === '}') braceCount--;
                    
                    if (braceCount === 0) {
                      endIndex = i + 1;
                      break;
                    }
                  }
                  
                  if (endIndex === 0) {
                    throw new Error("Could not find end of news data object");
                  }
                  
                  const dataString = contentSubstring.substring(0, endIndex);
                  return dataString;
                } catch (error) {
                  console.error("Error extracting news data:", error);
                  return null;
                }
              };
              
              const newsDataStr = extractNewsData(newsData);
              
              if (newsDataStr) {
                // Convert today's news to the format used in news-data.js
                const todayNewsStr = JSON.stringify(todayArticles, null, 4)
                  .replace(/"(\w+)":/g, '$1:')       // Remove quotes around keys
                  .replace(/"content": (.+?)"/g, '"content": $1') // Remove quotes around content
                  .replace(/\\"/g, '"');            // Fix escaped quotes
                
                // Create the updated news object with today's news at the top
                const updatedNews = `// News data organized by date
const newsByDate = {
    // Today's news
    '${dateString}': ${todayNewsStr},
    
    // Yesterday's news - previous "today's news"
    ${newsDataStr.split('// Today\'s news')[1].split('// Yesterday\'s news')[0].trim()}
};`;
                
                // Write the updated data back to news-data.js
                await fs.promises.writeFile(newsDataPath, updatedNews);
                console.log('Successfully updated news-data.js');
              } else {
                console.error('Failed to parse existing news data, using fallback approach');
                
                // Fallback: Create a simple replacement string
                const newsTodayStr = JSON.stringify(todayArticles, null, 4)
                  .replace(/"(\w+)":/g, '$1:')
                  .replace(/"content": "(.+?)"/g, '"content": `$1`')
                  .replace(/\\"/g, '"');
                
                const updatedNews = `// News data organized by date
const newsByDate = {
    // Today's news
    '${dateString}': ${newsTodayStr},
    
    // Check the GitHub repository for previous days' news
};`;
                
                await fs.promises.writeFile(newsDataPath, updatedNews);
                console.log('Successfully updated news-data.js using fallback method');
              }
            } catch (error) {
              console.error('Error updating news:', error);
              process.exit(1);
            }
          }
          
          // Run the update process
          updateNews();
          EOF
      
      - name: Run news updater
        run: node update-news.js
      
      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          add: 'news-data.js'
          message: 'Update news data for ${{ github.event.schedule == '' && 'manual trigger' || 'daily schedule' }}'
          default_author: github_actions
